# -*- coding: utf-8 -*-
"""KMeans_Clustering.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nL4LDYDArxJ5OIyrtV-Du__1wKZJyzyh
"""

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans

df = pd.read_csv('/content/sample_data/Clustering.csv')

df

df.columns

X = df.loc[:, :'Malic_Acid'].values

print(X)

X

pd.DataFrame(X)

wcss=[]
for i in range(1,10):
  kmeans2 = KMeans(i)
  kmeans2.fit(X)
  wcss_iter = kmeans2.inertia_
  wcss.append(wcss_iter)

number_clusters = range(1,10)
plt.plot(number_clusters,wcss)
plt.title('The Elbow title')
plt.xlabel('Number of clusters')
plt.ylabel('WCSS')

# SELECTING BEST K VALUE FROM WCSS GRAPH - IN THIS CASE IT IS 3 TO FIND THE ELBOW

# NO OF FEATURES WHEN 3 ('Alcohol', 'Malic_Acid', 'Ash',)

from sklearn.preprocessing import StandardScaler

df.head(5)

scaler = StandardScaler()
df = scaler.fit_transform(df)

dfMain = pd.DataFrame(df)
print(dfMain)

X = dfMain.iloc[:, :3].values

pd.DataFrame(X).head()

wcss=[]
for i in range(1,7):
  kmeans3 = KMeans(i)
  kmeans3.fit(X)
  wcss_iter = kmeans3.inertia_
  wcss.append(wcss_iter)

number_clusters = range(1,7)
plt.plot(number_clusters,wcss)
plt.title('The Elbow title')
plt.xlabel('Number of clusters')
plt.ylabel('WCSS')

kmeans = KMeans( n_clusters=4, random_state=0 )

kmeans.fit(X)

clusters_IN = kmeans.predict(X)

clusters_IN

dfMain['Clusters'] = clusters_IN

dfMain.head(5)

kmeans.cluster_centers_.shape
# 5 CLUSTERS AND 13 COLUMNS

centers = kmeans.cluster_centers_
centers

data1 = dfMain[dfMain.Clusters==0]
data2 = dfMain[dfMain.Clusters==1]
data3 = dfMain[dfMain.Clusters==2]
data4 = dfMain[dfMain.Clusters==3]

pd.DataFrame(data1).head()
#data1[11]

# plt.axes(projection='2d')
# plt.scatter(X[:, 0], X[:, 1], c=clusters_IN, s=20, cmap='rainbow')
# centers = kmeans.cluster_centers_
# plt.scatter(centers[:, 0], centers[:, 1], c='blue', s=100, alpha=0.9);
# plt.show()


kplot = plt.axes(projection='3d')
xline = np.linspace(0, 15, 1000)
yline = np.linspace(0, 15, 1000)
zline = np.linspace(0, 15, 1000)
kplot.plot3D(xline, yline, zline, 'black')
# Data for three-dimensional scattered points
kplot.scatter3D(data1[0], data1[1], data1[2], c='red', label = 'Cluster 1')
kplot.scatter3D(data2[0], data2[1], data2[2],c ='green', label = 'Cluster 2')
kplot.scatter3D(data3[0], data3[1], data3[2],c ='blue', label = 'Cluster 3')
kplot.scatter3D(data4[0], data4[1], data4[2],c ='yellow', label = 'Cluster 4')
plt.scatter(kmeans.cluster_centers_[:,0], kmeans.cluster_centers_[:,1],kmeans.cluster_centers_[:,2], color = 'indigo' )
plt.legend()
plt.title("Kmeans - Clusters 4 Plotted")
plt.show()



df2 = df.loc[:, :'Proline']

type(df2)

type(df)

data_IN_cluster = df2.copy()

data_IN_cluster

data_IN_cluster['Clusters'] = clusters_IN

data_IN_cluster

# 'Alcohol', 'Malic_Acid', 'Ash', 'Ash_Alcanity', 'Magnesium',
#        'Total_Phenols', 'Flavanoids', 'Nonflavanoid_Phenols',
#        'Proanthocyanins', 'Color_Intensity', 'Hue', 'OD280', 'Proline'

plt.scatter(data_IN_cluster['Alcohol'],
            data_IN_cluster['Malic_Acid'],
            c=data_IN_cluster['Clusters'],cmap='rainbow')

wcss=[]
for i in range(1,7):
  kmeans2 = KMeans(i)
  kmeans2.fit(X)
  wcss_iter = kmeans2.inertia_
  wcss.append(wcss_iter)

number_clusters = range(1,7)
plt.plot(number_clusters,wcss)
plt.title('The Elbow title')
plt.xlabel('Number of clusters')
plt.ylabel('WCSS')

